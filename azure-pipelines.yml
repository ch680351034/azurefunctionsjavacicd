name: $(BuildDefinitionName)_$(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

variables:
  mavenPomFile : 'pom.xml'
  funcAppName: 'azurefunctionsjavacicd'
  location: 'Westeurope'
  #serviceConnection: ''
  #MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  #MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

steps:
#- task: CacheBeta@0
#  displayName: Cache Maven local repo
#  inputs:
#    key: 'maven | "$(Agent.OS)" | ${{ parameters.project }}'
#    restoreKeys: |
#      maven | "$(Agent.OS)"
#      maven
#    path: $(MAVEN_CACHE_FOLDER)
- task: Maven@3
  inputs:
    mavenPomFile: $(mavenPomFile)
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    goals: 'package'
    options: '--batch-mode'
#    options: '$(MAVEN_OPTS)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'target/azure-functions/$(funcAppName)'
    includeRootFolder: false 
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(funcAppName)$(Build.BuildId).zip' 

- publish: '$(Build.ArtifactStagingDirectory)/$(funcAppName)$(Build.BuildId).zip'
  artifact: FunctionApp

- task: AzureResourceGroupDeployment@2
  inputs:
    action: Create Or Update Resource Group
    location: $(location)
    azureSubscription: $(serviceConnection)
    resourceGroupName: '$(funcAppName)-rg'
    templateLocation: Linked artifact
    csmFile: 'azuredeploy.json'
    csmParametersFile: 'azuredeploy.parameters.json'

- task: AzureFunctionApp@1
  inputs:
    azureSubscription: $(serviceConnection)
    appType: functionApp
    appName: $(funcAppName)
    package: '$(Build.ArtifactStagingDirectory)/$(funcAppName)$(Build.BuildId).zip'
